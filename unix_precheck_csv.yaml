#Date: 14th Aug,2023
#LAST MODIFIED ON: 15th Aug,2023
#Account Ericsson
#Playbook Developed by Gaurav Kumar
#Contact gaurav.kumar42@kyndryl.com
#Version 1.5
---
- name: Prepare environment for upload to SFS in patch scan playbook
  hosts: all
  connection: local
  gather_facts: false
  run_once: true
  ignore_unreachable: true
  tasks:
    - include_role:
        name: sfs_upload
      vars:
        sfs_upload_stage: "prepare"
        output_dir: "/tmp/testing_sfs"

    - name: Stop execution if SFS failed
      delegate_to: localhost
      delegate_facts: true
      set_fact:
        myrole_run_execution: true
      when: returncode == "0"
      
- hosts: all
  gather_facts: no
  become: true
  become_method: sudo
  ignore_errors: true
  ignore_unreachable: true
  vars:
    open_vm: "no openvm tool"
    mount_pts: "no mount pt avbove 75%"
  tasks:
  - name: get kernel version
    shell: uname -r
    register: kernel
    
  - name: get os version
    shell: cat /etc/redhat-release
    register: os_version
    
  - name: check if server is centos
    shell: cat /etc/redhat-release | grep -i centos
    register: centos
    
    
  - name: check if server is redhat
    shell: cat /etc/redhat-release | grep -i red
    register: redhat
    
  - name: get mount point above 75 percent
    shell: echo `df -P | awk '0+$5 >= 75 {print}' |  awk '{ print $6 }' | tr '\n' ' ' | sed 's/,$/\n/'`
    register: mount
    
  - name: get uptime of the server
    shell: echo `uptime | awk '{ print $3 $4 }' | tr ',' ' '`
    register: uptime
    
  - name: get total number of repo enabled
    shell: echo `yum repolist enabled | grep 'repolist:' | cut -d ':' -f2 | tr ',' ' '`
    register: enabled_number
    
  - name: get all enabled repo for centos server
    shell: echo `yum repolist enabled | tail -n 5 | head -n -1 | awk '{ print $1 }' | tr '\n' ',' | sed 's/,$/\n/'`
    register: enabled_cent
    when: centos.rc == 0
    
  - name: get all enabled repo name for redhat server
    shell: echo `yum repolist enabled | tail -n +5 | head -n -3 | awk '{ print $1}' | tr '\n' ',' | sed 's/,$/\n/'`
    register: enabled_red
    when: redhat.rc == 0
    
  - name: get openvm version
    shell: rpm -qa |grep -i open-vm-tools
    register: open
    
  - set_fact:
      open_vm: "{{ open.stdout }}"
    when: open.rc == 0
    
  - set_fact:
      mount_pts: "{{ mount.stdout }}"
    when: mount.rc == 0
    
  - name: append data in csv file
    lineinfile:
      path: /tmp/linux_precheck_{{ tower_job_id }}.csv
      line: '{{ inventory_hostname }},{{ os_version.stdout }},{{ kernel.stdout }},{{ uptime.stdout }},{{ open_vm }},{{ enabled_number.stdout }},{{ mount_pts }},{{ enabled_cent.stdout }}'
      create: true
    when: centos.rc == 0
    
  - name: append data in csv file
    lineinfile:
      path: /tmp/linux_precheck_{{ tower_job_id }}.csv
      line: '{{ inventory_hostname }},{{ os_version.stdout }},{{ kernel.stdout }},{{ uptime.stdout }},{{ open_vm }},{{ enabled_number.stdout }},{{ mount_pts }},{{ enabled_red.stdout }}'
      create: true
    when: redhat.rc == 0
    
  - name: fetch data to AT
    fetch:
      src: "/tmp/linux_precheck_{{ tower_job_id }}.csv"
      dest: "{{ result_dir_path }}/{{ inventory_hostname }}-{{ tower_job_id }}-{{ bac_id }}-{{ lookup('pipe','date +%Y-%m-%d') }}.csv"
      flat: true
    vars:
      result_dir_path: "{{ hostvars['localhost'].base_dir }}"
      

- name: Upload data to SFS and report SFS return value as my result.
  hosts: all
  connection: local
  gather_facts: false
  run_once: true
  ignore_unreachable: true
  tasks:
    - include_role:
        name: sfs_upload
      vars:
        sfs_upload_stage: "upload"
        output_file_name: "unix_precheck_csv_{{ tower_job_id }}_{{ hostvars.localhost.timestamp }}.zip"
        merged_file_name: "unix_precheck_csv_consolidated_{{ tower_job_id }}_{{ hostvars.localhost.timestamp }}.csv"
        merge_results: true       
      when:
        - hostvars.localhost.myrole_run_execution is defined
        - hostvars.localhost.myrole_run_execution        
  
